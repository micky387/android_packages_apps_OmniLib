<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">
    <bool translatable="false" name="config_enableAutoSuspend">true</bool>

    <!-- Path to the library that contains a device specific key handler -->
    <string name="config_deviceKeyHandlerLib" translatable="false"></string>

    <!-- Name of that key handler class -->
    <string name="config_deviceKeyHandlerClass" translatable="false"></string>

    <!-- make sure you enable this only if your device supports deep slepp
    with active proximity sensor event listener -->
    <bool name="config_proxiSensorWakupCheck">false</bool>

    <!-- Is the battery LED intrusive? Used to decide if there should be a disable option -->
    <bool name="config_intrusiveBatteryLed">false</bool>
    <!-- Does the battery LED support multiple colors?
         Used to decide if the user can change the colors -->
    <bool name="config_multiColorBatteryLed">false</bool>
    <!-- Does the device supports fast charging -->
    <bool name="config_FastChargingLedSupported">false</bool>
    <!-- Default value for led color when fast charging is active -->
    <integer name="config_notificationsFastBatteryARGB">0x0000FF</integer>

    <!-- Defines external services to be started by the OmniRomSystemServer at boot. The service itself
         should publish as a binder services in its onStart -->
    <string-array name="config_externalOmniRomServices">
            <item>org.omnirom.omnilib.internal.health.HealthInterfaceService</item>
    </string-array>

    <!-- The LineageSystemServer class that is invoked from Android's SystemServer -->
    <string name="config_externalSystemServer" translatable="false">org.omnirom.omnilib.internal.OmniRomSystemServer</string>

    <!-- Whether charging control should be enabled by default -->
    <bool name="config_chargingControlEnabled">false</bool>
    <!-- Default charging control mode.
         This integer should be set to:
         1 - auto - Use the alarm to calculate the time range when to activate charging control
         2 - custom - Use time range when the device is usually charging for hours
         3 - limit - Just limit charging -->
    <integer name="config_defaultChargingControlMode">1</integer>
    <!-- Default time when charging control is activated.
         Represented as seconds from midnight (e.g. 79200 == 10pm). -->
    <integer name="config_defaultChargingControlStartTime">79200</integer>
    <!-- Default time when battery will be fully charged.
         Represented as seconds from midnight (e.g. 21600 == 6am). -->
    <integer name="config_defaultChargingControlTargetTime">21600</integer>
    <!-- Default charging limit. -->
    <integer name="config_defaultChargingControlLimit">80</integer>
    <!-- Considering the fact that the system might have an incorrect estimation of the time to
         full. Set a time margin to make the device fully charged before the target time arrives.
         The unit is minutes and the default value is 30 minutes. If you find that it is not enough
         to make the device to be fully charged at the target time, increase the value
    -->
    <integer name="config_chargingControlTimeMargin">30</integer>
    <!-- For a device that cannot bypass battery when charging stops (that is, the battery current
         is 0mA when charging stops), the battery will gradually discharge. So we need to make it
         recharge when the battery level is lower than a threshold. Set this so that the device
         will be charged between (limit - val) and limit. -->
    <integer name="config_chargingControlBatteryRechargeMargin">10</integer>

</resources>
